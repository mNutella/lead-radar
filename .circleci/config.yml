version: 2

jobs:
  build:
    working_directory: ~/leadradar
    docker:
      - image: circleci/python:3.6-stretch-node-browsers # remeber to update those!
        environment:
    # makes default virtualenv be ignored by pipenv avoiding dependencies conflict
          PIPENV_IGNORE_VIRTUALENVS: True
          PIPENV_VENV_IN_PROJECT: True
          PIPENV_DONT_LOAD_ENV: 0
          DATABASE_URL: 'postgres://root@localhost/lead_radar_db'
      - image: circleci/postgres:9.6.2
        environment: # environment variables for the Postgres container.
          POSTGRES_USER: root
          POSTGRES_DB: lead_radar_db
    steps:
      - checkout
      # this updates git-lfs to make pre-commit large files check hook work properly
      # more details in https://github.com/pre-commit/pre-commit-hooks/issues/252
      - run:
          command: curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
      - run:
          command: sudo apt-get install git-lfs --upgrade
      - run:
          command: sudo chown -R circleci:circleci /usr/local/bin
      - run:
          command: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - run:
          command: pip install requests pipenv --upgrade
      
      - restore_cache:
          keys:
            - v1-pipenv-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - v1-pipenv-cache-{{ .Branch }}-
            - v1-pipenv-cache-
      - run:
          command: pipenv install --dev
      - save_cache:
          key: pipenv-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - .venv
            - /usr/local/bin
            - /usr/local/lib/python3.6/site-packages
      - restore_cache:
          keys:
            - v1-npm-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - v1-npm-cache-{{ .Branch }}-
            - v1-npm-cache-
      - run:
          command: npm install
      - save_cache:
          key: npm-cache-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - node_modules
      
      - run:
          command: npm run build
      - run:
          command: npm run lint
      # style check
      - run:
          command: pipenv run prospector --messages-only
      # security checks
      - run:
          command: pipenv run bandit -r .
      - run:
          command: pipenv check
      # imports check
      - run:
          command: pipenv run isort **/*.py --check-only
      - run:
          command: pipenv run pre-commit run --all-files
          environment:
            SKIP: prospector,isort,eslint,missing-migrations
      - run:
          command: pipenv run python manage.py has_missing_migrations --ignore authtools
          environment:
            DJANGO_SETTINGS_MODULE: 'leadradar.settings.local_base'
            DEBUG_SECRET_KEY: 'secret'
      - run:
          command: pipenv run python manage.py check --deploy
          environment:
            DJANGO_SETTINGS_MODULE: 'leadradar.settings.production'
            SECRET_KEY: "$(python -c 'import uuid; print(uuid.uuid4().hex + uuid.uuid4().hex)')"
            ALLOWED_HOSTS: 'lid-radar.herokuapp.com'
            SENDGRID_USERNAME: 'test'
            SENDGRID_PASSWORD: 'test'
            REDIS_URL: 'redis://'
      - run:
          command: pipenv run coverage run manage.py test
          environment:
            SECRET_KEY: "$(python -c 'import uuid; print(uuid.uuid4().hex + uuid.uuid4().hex)')"
      - run:
          command: npm run test
      - run:
          command: |
            mkdir -p test-reports/
            pipenv run coverage xml -o test-reports/results.xml
          when: always
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
